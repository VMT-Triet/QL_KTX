#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_KTX")]
	public partial class KTXDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAOTRI(BAOTRI instance);
    partial void UpdateBAOTRI(BAOTRI instance);
    partial void DeleteBAOTRI(BAOTRI instance);
    partial void InsertVIPHAM(VIPHAM instance);
    partial void UpdateVIPHAM(VIPHAM instance);
    partial void DeleteVIPHAM(VIPHAM instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertCTBAOTRI(CTBAOTRI instance);
    partial void UpdateCTBAOTRI(CTBAOTRI instance);
    partial void DeleteCTBAOTRI(CTBAOTRI instance);
    partial void InsertCTHOADONDIENNUOC(CTHOADONDIENNUOC instance);
    partial void UpdateCTHOADONDIENNUOC(CTHOADONDIENNUOC instance);
    partial void DeleteCTHOADONDIENNUOC(CTHOADONDIENNUOC instance);
    partial void InsertCTPHIEUGUIXE(CTPHIEUGUIXE instance);
    partial void UpdateCTPHIEUGUIXE(CTPHIEUGUIXE instance);
    partial void DeleteCTPHIEUGUIXE(CTPHIEUGUIXE instance);
    partial void InsertCTPHONG(CTPHONG instance);
    partial void UpdateCTPHONG(CTPHONG instance);
    partial void DeleteCTPHONG(CTPHONG instance);
    partial void InsertCTVIPHAM(CTVIPHAM instance);
    partial void UpdateCTVIPHAM(CTVIPHAM instance);
    partial void DeleteCTVIPHAM(CTVIPHAM instance);
    partial void InsertHOADONDIENNUOC(HOADONDIENNUOC instance);
    partial void UpdateHOADONDIENNUOC(HOADONDIENNUOC instance);
    partial void DeleteHOADONDIENNUOC(HOADONDIENNUOC instance);
    partial void InsertHOPDONG(HOPDONG instance);
    partial void UpdateHOPDONG(HOPDONG instance);
    partial void DeleteHOPDONG(HOPDONG instance);
    partial void InsertLOAIVIPHAM(LOAIVIPHAM instance);
    partial void UpdateLOAIVIPHAM(LOAIVIPHAM instance);
    partial void DeleteLOAIVIPHAM(LOAIVIPHAM instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHOMQUYEN(NHOMQUYEN instance);
    partial void UpdateNHOMQUYEN(NHOMQUYEN instance);
    partial void DeleteNHOMQUYEN(NHOMQUYEN instance);
    partial void InsertNIENKHOA(NIENKHOA instance);
    partial void UpdateNIENKHOA(NIENKHOA instance);
    partial void DeleteNIENKHOA(NIENKHOA instance);
    partial void InsertPHIEUGUIXE(PHIEUGUIXE instance);
    partial void UpdatePHIEUGUIXE(PHIEUGUIXE instance);
    partial void DeletePHIEUGUIXE(PHIEUGUIXE instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertQUYEN(QUYEN instance);
    partial void UpdateQUYEN(QUYEN instance);
    partial void DeleteQUYEN(QUYEN instance);
    partial void InsertSINHVIEN(SINHVIEN instance);
    partial void UpdateSINHVIEN(SINHVIEN instance);
    partial void DeleteSINHVIEN(SINHVIEN instance);
    partial void InsertTHIETBI(THIETBI instance);
    partial void UpdateTHIETBI(THIETBI instance);
    partial void DeleteTHIETBI(THIETBI instance);
    partial void InsertTHIETBIPHONG(THIETBIPHONG instance);
    partial void UpdateTHIETBIPHONG(THIETBIPHONG instance);
    partial void DeleteTHIETBIPHONG(THIETBIPHONG instance);
    partial void InsertTHONGKE(THONGKE instance);
    partial void UpdateTHONGKE(THONGKE instance);
    partial void DeleteTHONGKE(THONGKE instance);
    #endregion
		
		public KTXDataContext() : 
				base(global::DAL.Properties.Settings.Default.QL_KTXConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KTXDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KTXDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KTXDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KTXDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAOTRI> BAOTRIs
		{
			get
			{
				return this.GetTable<BAOTRI>();
			}
		}
		
		public System.Data.Linq.Table<VIPHAM> VIPHAMs
		{
			get
			{
				return this.GetTable<VIPHAM>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<CTBAOTRI> CTBAOTRIs
		{
			get
			{
				return this.GetTable<CTBAOTRI>();
			}
		}
		
		public System.Data.Linq.Table<CTHOADONDIENNUOC> CTHOADONDIENNUOCs
		{
			get
			{
				return this.GetTable<CTHOADONDIENNUOC>();
			}
		}
		
		public System.Data.Linq.Table<CTPHIEUGUIXE> CTPHIEUGUIXEs
		{
			get
			{
				return this.GetTable<CTPHIEUGUIXE>();
			}
		}
		
		public System.Data.Linq.Table<CTPHONG> CTPHONGs
		{
			get
			{
				return this.GetTable<CTPHONG>();
			}
		}
		
		public System.Data.Linq.Table<CTTHONGKE> CTTHONGKEs
		{
			get
			{
				return this.GetTable<CTTHONGKE>();
			}
		}
		
		public System.Data.Linq.Table<CTVIPHAM> CTVIPHAMs
		{
			get
			{
				return this.GetTable<CTVIPHAM>();
			}
		}
		
		public System.Data.Linq.Table<HOADONDIENNUOC> HOADONDIENNUOCs
		{
			get
			{
				return this.GetTable<HOADONDIENNUOC>();
			}
		}
		
		public System.Data.Linq.Table<HOPDONG> HOPDONGs
		{
			get
			{
				return this.GetTable<HOPDONG>();
			}
		}
		
		public System.Data.Linq.Table<LOAIVIPHAM> LOAIVIPHAMs
		{
			get
			{
				return this.GetTable<LOAIVIPHAM>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHOMQUYEN> NHOMQUYENs
		{
			get
			{
				return this.GetTable<NHOMQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<NIENKHOA> NIENKHOAs
		{
			get
			{
				return this.GetTable<NIENKHOA>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUGUIXE> PHIEUGUIXEs
		{
			get
			{
				return this.GetTable<PHIEUGUIXE>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<QUYEN> QUYENs
		{
			get
			{
				return this.GetTable<QUYEN>();
			}
		}
		
		public System.Data.Linq.Table<SINHVIEN> SINHVIENs
		{
			get
			{
				return this.GetTable<SINHVIEN>();
			}
		}
		
		public System.Data.Linq.Table<THIETBI> THIETBIs
		{
			get
			{
				return this.GetTable<THIETBI>();
			}
		}
		
		public System.Data.Linq.Table<THIETBIPHONG> THIETBIPHONGs
		{
			get
			{
				return this.GetTable<THIETBIPHONG>();
			}
		}
		
		public System.Data.Linq.Table<THONGKE> THONGKEs
		{
			get
			{
				return this.GetTable<THONGKE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAOTRI")]
	public partial class BAOTRI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBT;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _SoPhong;
		
		private string _MaNV;
		
		private System.Nullable<double> _TongTien;
		
		private EntitySet<CTBAOTRI> _CTBAOTRIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBTChanging(string value);
    partial void OnMaBTChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnSoPhongChanging(string value);
    partial void OnSoPhongChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public BAOTRI()
		{
			this._CTBAOTRIs = new EntitySet<CTBAOTRI>(new Action<CTBAOTRI>(this.attach_CTBAOTRIs), new Action<CTBAOTRI>(this.detach_CTBAOTRIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBT
		{
			get
			{
				return this._MaBT;
			}
			set
			{
				if ((this._MaBT != value))
				{
					this.OnMaBTChanging(value);
					this.SendPropertyChanging();
					this._MaBT = value;
					this.SendPropertyChanged("MaBT");
					this.OnMaBTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhong", DbType="VarChar(10)")]
		public string SoPhong
		{
			get
			{
				return this._SoPhong;
			}
			set
			{
				if ((this._SoPhong != value))
				{
					this.OnSoPhongChanging(value);
					this.SendPropertyChanging();
					this._SoPhong = value;
					this.SendPropertyChanged("SoPhong");
					this.OnSoPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAOTRI_CTBAOTRI", Storage="_CTBAOTRIs", ThisKey="MaBT", OtherKey="MaBT")]
		public EntitySet<CTBAOTRI> CTBAOTRIs
		{
			get
			{
				return this._CTBAOTRIs;
			}
			set
			{
				this._CTBAOTRIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTBAOTRIs(CTBAOTRI entity)
		{
			this.SendPropertyChanging();
			entity.BAOTRI = this;
		}
		
		private void detach_CTBAOTRIs(CTBAOTRI entity)
		{
			this.SendPropertyChanging();
			entity.BAOTRI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VIPHAM")]
	public partial class VIPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaVP;
		
		private string _MaLoaiVP;
		
		private string _MaNV;
		
		private string _MaSV;
		
		private System.Nullable<int> _SoLan;
		
		private EntitySet<CTVIPHAM> _CTVIPHAMs;
		
		private EntityRef<LOAIVIPHAM> _LOAIVIPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVPChanging(string value);
    partial void OnMaVPChanged();
    partial void OnMaLoaiVPChanging(string value);
    partial void OnMaLoaiVPChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnSoLanChanging(System.Nullable<int> value);
    partial void OnSoLanChanged();
    #endregion
		
		public VIPHAM()
		{
			this._CTVIPHAMs = new EntitySet<CTVIPHAM>(new Action<CTVIPHAM>(this.attach_CTVIPHAMs), new Action<CTVIPHAM>(this.detach_CTVIPHAMs));
			this._LOAIVIPHAM = default(EntityRef<LOAIVIPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaVP
		{
			get
			{
				return this._MaVP;
			}
			set
			{
				if ((this._MaVP != value))
				{
					this.OnMaVPChanging(value);
					this.SendPropertyChanging();
					this._MaVP = value;
					this.SendPropertyChanged("MaVP");
					this.OnMaVPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiVP", DbType="VarChar(10)")]
		public string MaLoaiVP
		{
			get
			{
				return this._MaLoaiVP;
			}
			set
			{
				if ((this._MaLoaiVP != value))
				{
					if (this._LOAIVIPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiVPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiVP = value;
					this.SendPropertyChanged("MaLoaiVP");
					this.OnMaLoaiVPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(10)")]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLan", DbType="Int")]
		public System.Nullable<int> SoLan
		{
			get
			{
				return this._SoLan;
			}
			set
			{
				if ((this._SoLan != value))
				{
					this.OnSoLanChanging(value);
					this.SendPropertyChanging();
					this._SoLan = value;
					this.SendPropertyChanged("SoLan");
					this.OnSoLanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VIPHAM_CTVIPHAM", Storage="_CTVIPHAMs", ThisKey="MaVP", OtherKey="MaVP")]
		public EntitySet<CTVIPHAM> CTVIPHAMs
		{
			get
			{
				return this._CTVIPHAMs;
			}
			set
			{
				this._CTVIPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIVIPHAM_VIPHAM", Storage="_LOAIVIPHAM", ThisKey="MaLoaiVP", OtherKey="MaLoaiVP", IsForeignKey=true)]
		public LOAIVIPHAM LOAIVIPHAM
		{
			get
			{
				return this._LOAIVIPHAM.Entity;
			}
			set
			{
				LOAIVIPHAM previousValue = this._LOAIVIPHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAIVIPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIVIPHAM.Entity = null;
						previousValue.VIPHAMs.Remove(this);
					}
					this._LOAIVIPHAM.Entity = value;
					if ((value != null))
					{
						value.VIPHAMs.Add(this);
						this._MaLoaiVP = value.MaLoaiVP;
					}
					else
					{
						this._MaLoaiVP = default(string);
					}
					this.SendPropertyChanged("LOAIVIPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTVIPHAMs(CTVIPHAM entity)
		{
			this.SendPropertyChanging();
			entity.VIPHAM = this;
		}
		
		private void detach_CTVIPHAMs(CTVIPHAM entity)
		{
			this.SendPropertyChanging();
			entity.VIPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCV;
		
		private string _TenCV;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCVChanging(string value);
    partial void OnMaCVChanged();
    partial void OnTenCVChanging(string value);
    partial void OnTenCVChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCV", DbType="NVarChar(50)")]
		public string TenCV
		{
			get
			{
				return this._TenCV;
			}
			set
			{
				if ((this._TenCV != value))
				{
					this.OnTenCVChanging(value);
					this.SendPropertyChanging();
					this._TenCV = value;
					this.SendPropertyChanged("TenCV");
					this.OnTenCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaCV", OtherKey="MaCV")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTBAOTRI")]
	public partial class CTBAOTRI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBT;
		
		private string _MaSV;
		
		private string _MaTB;
		
		private string _GhiChu;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<bool> _TinhTrang;
		
		private System.Nullable<System.DateTime> _NgaySua;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<BAOTRI> _BAOTRI;
		
		private EntityRef<THIETBI> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBTChanging(string value);
    partial void OnMaBTChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnMaTBChanging(string value);
    partial void OnMaTBChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    partial void OnNgaySuaChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySuaChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CTBAOTRI()
		{
			this._BAOTRI = default(EntityRef<BAOTRI>);
			this._THIETBI = default(EntityRef<THIETBI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBT
		{
			get
			{
				return this._MaBT;
			}
			set
			{
				if ((this._MaBT != value))
				{
					if (this._BAOTRI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBTChanging(value);
					this.SendPropertyChanging();
					this._MaBT = value;
					this.SendPropertyChanged("MaBT");
					this.OnMaBTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTB", DbType="VarChar(10)")]
		public string MaTB
		{
			get
			{
				return this._MaTB;
			}
			set
			{
				if ((this._MaTB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTBChanging(value);
					this.SendPropertyChanging();
					this._MaTB = value;
					this.SendPropertyChanged("MaTB");
					this.OnMaTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(MAX)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySua", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySua
		{
			get
			{
				return this._NgaySua;
			}
			set
			{
				if ((this._NgaySua != value))
				{
					this.OnNgaySuaChanging(value);
					this.SendPropertyChanging();
					this._NgaySua = value;
					this.SendPropertyChanged("NgaySua");
					this.OnNgaySuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAOTRI_CTBAOTRI", Storage="_BAOTRI", ThisKey="MaBT", OtherKey="MaBT", IsForeignKey=true)]
		public BAOTRI BAOTRI
		{
			get
			{
				return this._BAOTRI.Entity;
			}
			set
			{
				BAOTRI previousValue = this._BAOTRI.Entity;
				if (((previousValue != value) 
							|| (this._BAOTRI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAOTRI.Entity = null;
						previousValue.CTBAOTRIs.Remove(this);
					}
					this._BAOTRI.Entity = value;
					if ((value != null))
					{
						value.CTBAOTRIs.Add(this);
						this._MaBT = value.MaBT;
					}
					else
					{
						this._MaBT = default(string);
					}
					this.SendPropertyChanged("BAOTRI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTBAOTRI", Storage="_THIETBI", ThisKey="MaTB", OtherKey="MaTB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTBAOTRIs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTBAOTRIs.Add(this);
						this._MaTB = value.MaTB;
					}
					else
					{
						this._MaTB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHOADONDIENNUOC")]
	public partial class CTHOADONDIENNUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private double _SoDienCu;
		
		private double _SoNuocCu;
		
		private double _SoDienMoi;
		
		private double _SoNuocMoi;
		
		private System.Nullable<double> _TienDien;
		
		private System.Nullable<double> _TienNuoc;
		
		private EntityRef<HOADONDIENNUOC> _HOADONDIENNUOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnSoDienCuChanging(double value);
    partial void OnSoDienCuChanged();
    partial void OnSoNuocCuChanging(double value);
    partial void OnSoNuocCuChanged();
    partial void OnSoDienMoiChanging(double value);
    partial void OnSoDienMoiChanged();
    partial void OnSoNuocMoiChanging(double value);
    partial void OnSoNuocMoiChanged();
    partial void OnTienDienChanging(System.Nullable<double> value);
    partial void OnTienDienChanged();
    partial void OnTienNuocChanging(System.Nullable<double> value);
    partial void OnTienNuocChanged();
    #endregion
		
		public CTHOADONDIENNUOC()
		{
			this._HOADONDIENNUOC = default(EntityRef<HOADONDIENNUOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOADONDIENNUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienCu", DbType="Float NOT NULL")]
		public double SoDienCu
		{
			get
			{
				return this._SoDienCu;
			}
			set
			{
				if ((this._SoDienCu != value))
				{
					this.OnSoDienCuChanging(value);
					this.SendPropertyChanging();
					this._SoDienCu = value;
					this.SendPropertyChanged("SoDienCu");
					this.OnSoDienCuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNuocCu", DbType="Float NOT NULL")]
		public double SoNuocCu
		{
			get
			{
				return this._SoNuocCu;
			}
			set
			{
				if ((this._SoNuocCu != value))
				{
					this.OnSoNuocCuChanging(value);
					this.SendPropertyChanging();
					this._SoNuocCu = value;
					this.SendPropertyChanged("SoNuocCu");
					this.OnSoNuocCuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienMoi", DbType="Float NOT NULL")]
		public double SoDienMoi
		{
			get
			{
				return this._SoDienMoi;
			}
			set
			{
				if ((this._SoDienMoi != value))
				{
					this.OnSoDienMoiChanging(value);
					this.SendPropertyChanging();
					this._SoDienMoi = value;
					this.SendPropertyChanged("SoDienMoi");
					this.OnSoDienMoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNuocMoi", DbType="Float NOT NULL")]
		public double SoNuocMoi
		{
			get
			{
				return this._SoNuocMoi;
			}
			set
			{
				if ((this._SoNuocMoi != value))
				{
					this.OnSoNuocMoiChanging(value);
					this.SendPropertyChanging();
					this._SoNuocMoi = value;
					this.SendPropertyChanged("SoNuocMoi");
					this.OnSoNuocMoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienDien", DbType="Float")]
		public System.Nullable<double> TienDien
		{
			get
			{
				return this._TienDien;
			}
			set
			{
				if ((this._TienDien != value))
				{
					this.OnTienDienChanging(value);
					this.SendPropertyChanging();
					this._TienDien = value;
					this.SendPropertyChanged("TienDien");
					this.OnTienDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienNuoc", DbType="Float")]
		public System.Nullable<double> TienNuoc
		{
			get
			{
				return this._TienNuoc;
			}
			set
			{
				if ((this._TienNuoc != value))
				{
					this.OnTienNuocChanging(value);
					this.SendPropertyChanging();
					this._TienNuoc = value;
					this.SendPropertyChanged("TienNuoc");
					this.OnTienNuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADONDIENNUOC_CTHOADONDIENNUOC", Storage="_HOADONDIENNUOC", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HOADONDIENNUOC HOADONDIENNUOC
		{
			get
			{
				return this._HOADONDIENNUOC.Entity;
			}
			set
			{
				HOADONDIENNUOC previousValue = this._HOADONDIENNUOC.Entity;
				if (((previousValue != value) 
							|| (this._HOADONDIENNUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADONDIENNUOC.Entity = null;
						previousValue.CTHOADONDIENNUOC = null;
					}
					this._HOADONDIENNUOC.Entity = value;
					if ((value != null))
					{
						value.CTHOADONDIENNUOC = this;
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HOADONDIENNUOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHIEUGUIXE")]
	public partial class CTPHIEUGUIXE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPGX;
		
		private System.DateTime _NgayBD;
		
		private System.DateTime _NgayKT;
		
		private System.Nullable<double> _GiaTien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPGXChanging(string value);
    partial void OnMaPGXChanged();
    partial void OnNgayBDChanging(System.DateTime value);
    partial void OnNgayBDChanged();
    partial void OnNgayKTChanging(System.DateTime value);
    partial void OnNgayKTChanged();
    partial void OnGiaTienChanging(System.Nullable<double> value);
    partial void OnGiaTienChanged();
    #endregion
		
		public CTPHIEUGUIXE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPGX", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPGX
		{
			get
			{
				return this._MaPGX;
			}
			set
			{
				if ((this._MaPGX != value))
				{
					this.OnMaPGXChanging(value);
					this.SendPropertyChanging();
					this._MaPGX = value;
					this.SendPropertyChanged("MaPGX");
					this.OnMaPGXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBD", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayBD
		{
			get
			{
				return this._NgayBD;
			}
			set
			{
				if ((this._NgayBD != value))
				{
					this.OnNgayBDChanging(value);
					this.SendPropertyChanging();
					this._NgayBD = value;
					this.SendPropertyChanged("NgayBD");
					this.OnNgayBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKT", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayKT
		{
			get
			{
				return this._NgayKT;
			}
			set
			{
				if ((this._NgayKT != value))
				{
					this.OnNgayKTChanging(value);
					this.SendPropertyChanging();
					this._NgayKT = value;
					this.SendPropertyChanged("NgayKT");
					this.OnNgayKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Float")]
		public System.Nullable<double> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHONG")]
	public partial class CTPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoPhong;
		
		private string _MaSV;
		
		private System.Nullable<bool> _GuiXe;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoPhongChanging(string value);
    partial void OnSoPhongChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnGuiXeChanging(System.Nullable<bool> value);
    partial void OnGuiXeChanged();
    #endregion
		
		public CTPHONG()
		{
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhong", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SoPhong
		{
			get
			{
				return this._SoPhong;
			}
			set
			{
				if ((this._SoPhong != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoPhongChanging(value);
					this.SendPropertyChanging();
					this._SoPhong = value;
					this.SendPropertyChanged("SoPhong");
					this.OnSoPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuiXe", DbType="Bit")]
		public System.Nullable<bool> GuiXe
		{
			get
			{
				return this._GuiXe;
			}
			set
			{
				if ((this._GuiXe != value))
				{
					this.OnGuiXeChanging(value);
					this.SendPropertyChanging();
					this._GuiXe = value;
					this.SendPropertyChanged("GuiXe");
					this.OnGuiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CTPHONG", Storage="_PHONG", ThisKey="SoPhong", OtherKey="SoPhong", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CTPHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CTPHONGs.Add(this);
						this._SoPhong = value.SoPhong;
					}
					else
					{
						this._SoPhong = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTTHONGKE")]
	public partial class CTTHONGKE
	{
		
		private string _MaTK;
		
		private System.DateTime _NgayLap;
		
		private string _MaHopDong;
		
		private string _MaHD;
		
		private string _MaBT;
		
		private string _MaPGX;
		
		public CTTHONGKE()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					this._MaTK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date NOT NULL")]
		public System.DateTime NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this._NgayLap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHopDong", DbType="VarChar(10)")]
		public string MaHopDong
		{
			get
			{
				return this._MaHopDong;
			}
			set
			{
				if ((this._MaHopDong != value))
				{
					this._MaHopDong = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(10)")]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this._MaHD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBT", DbType="VarChar(10)")]
		public string MaBT
		{
			get
			{
				return this._MaBT;
			}
			set
			{
				if ((this._MaBT != value))
				{
					this._MaBT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPGX", DbType="VarChar(10)")]
		public string MaPGX
		{
			get
			{
				return this._MaPGX;
			}
			set
			{
				if ((this._MaPGX != value))
				{
					this._MaPGX = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTVIPHAM")]
	public partial class CTVIPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaVP;
		
		private System.DateTime _NgayLap;
		
		private string _GhiChu;
		
		private EntityRef<VIPHAM> _VIPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVPChanging(string value);
    partial void OnMaVPChanged();
    partial void OnNgayLapChanging(System.DateTime value);
    partial void OnNgayLapChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public CTVIPHAM()
		{
			this._VIPHAM = default(EntityRef<VIPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaVP
		{
			get
			{
				return this._MaVP;
			}
			set
			{
				if ((this._MaVP != value))
				{
					if (this._VIPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVPChanging(value);
					this.SendPropertyChanging();
					this._MaVP = value;
					this.SendPropertyChanged("MaVP");
					this.OnMaVPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(MAX)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VIPHAM_CTVIPHAM", Storage="_VIPHAM", ThisKey="MaVP", OtherKey="MaVP", IsForeignKey=true)]
		public VIPHAM VIPHAM
		{
			get
			{
				return this._VIPHAM.Entity;
			}
			set
			{
				VIPHAM previousValue = this._VIPHAM.Entity;
				if (((previousValue != value) 
							|| (this._VIPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VIPHAM.Entity = null;
						previousValue.CTVIPHAMs.Remove(this);
					}
					this._VIPHAM.Entity = value;
					if ((value != null))
					{
						value.CTVIPHAMs.Add(this);
						this._MaVP = value.MaVP;
					}
					else
					{
						this._MaVP = default(string);
					}
					this.SendPropertyChanged("VIPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADONDIENNUOC")]
	public partial class HOADONDIENNUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _SoPhong;
		
		private System.Nullable<double> _SoDien;
		
		private System.Nullable<double> _SoNuoc;
		
		private System.Nullable<double> _TongTien;
		
		private string _MaNV;
		
		private System.Nullable<bool> _TinhTrang;
		
		private EntityRef<CTHOADONDIENNUOC> _CTHOADONDIENNUOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnSoPhongChanging(string value);
    partial void OnSoPhongChanged();
    partial void OnSoDienChanging(System.Nullable<double> value);
    partial void OnSoDienChanged();
    partial void OnSoNuocChanging(System.Nullable<double> value);
    partial void OnSoNuocChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public HOADONDIENNUOC()
		{
			this._CTHOADONDIENNUOC = default(EntityRef<CTHOADONDIENNUOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhong", DbType="VarChar(10)")]
		public string SoPhong
		{
			get
			{
				return this._SoPhong;
			}
			set
			{
				if ((this._SoPhong != value))
				{
					this.OnSoPhongChanging(value);
					this.SendPropertyChanging();
					this._SoPhong = value;
					this.SendPropertyChanged("SoPhong");
					this.OnSoPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDien", DbType="Float")]
		public System.Nullable<double> SoDien
		{
			get
			{
				return this._SoDien;
			}
			set
			{
				if ((this._SoDien != value))
				{
					this.OnSoDienChanging(value);
					this.SendPropertyChanging();
					this._SoDien = value;
					this.SendPropertyChanged("SoDien");
					this.OnSoDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNuoc", DbType="Float")]
		public System.Nullable<double> SoNuoc
		{
			get
			{
				return this._SoNuoc;
			}
			set
			{
				if ((this._SoNuoc != value))
				{
					this.OnSoNuocChanging(value);
					this.SendPropertyChanging();
					this._SoNuoc = value;
					this.SendPropertyChanged("SoNuoc");
					this.OnSoNuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADONDIENNUOC_CTHOADONDIENNUOC", Storage="_CTHOADONDIENNUOC", ThisKey="MaHD", OtherKey="MaHD", IsUnique=true, IsForeignKey=false)]
		public CTHOADONDIENNUOC CTHOADONDIENNUOC
		{
			get
			{
				return this._CTHOADONDIENNUOC.Entity;
			}
			set
			{
				CTHOADONDIENNUOC previousValue = this._CTHOADONDIENNUOC.Entity;
				if (((previousValue != value) 
							|| (this._CTHOADONDIENNUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTHOADONDIENNUOC.Entity = null;
						previousValue.HOADONDIENNUOC = null;
					}
					this._CTHOADONDIENNUOC.Entity = value;
					if ((value != null))
					{
						value.HOADONDIENNUOC = this;
					}
					this.SendPropertyChanged("CTHOADONDIENNUOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOPDONG")]
	public partial class HOPDONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHopDong;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _MaSV;
		
		private string _MaNV;
		
		private string _MaNK;
		
		private System.Nullable<double> _TongTien;
		
		private EntityRef<NIENKHOA> _NIENKHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHopDongChanging(string value);
    partial void OnMaHopDongChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaNKChanging(string value);
    partial void OnMaNKChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public HOPDONG()
		{
			this._NIENKHOA = default(EntityRef<NIENKHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHopDong", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHopDong
		{
			get
			{
				return this._MaHopDong;
			}
			set
			{
				if ((this._MaHopDong != value))
				{
					this.OnMaHopDongChanging(value);
					this.SendPropertyChanging();
					this._MaHopDong = value;
					this.SendPropertyChanged("MaHopDong");
					this.OnMaHopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(10)")]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNK", DbType="VarChar(10)")]
		public string MaNK
		{
			get
			{
				return this._MaNK;
			}
			set
			{
				if ((this._MaNK != value))
				{
					if (this._NIENKHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNKChanging(value);
					this.SendPropertyChanging();
					this._MaNK = value;
					this.SendPropertyChanged("MaNK");
					this.OnMaNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NIENKHOA_HOPDONG", Storage="_NIENKHOA", ThisKey="MaNK", OtherKey="MaNK", IsForeignKey=true)]
		public NIENKHOA NIENKHOA
		{
			get
			{
				return this._NIENKHOA.Entity;
			}
			set
			{
				NIENKHOA previousValue = this._NIENKHOA.Entity;
				if (((previousValue != value) 
							|| (this._NIENKHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NIENKHOA.Entity = null;
						previousValue.HOPDONGs.Remove(this);
					}
					this._NIENKHOA.Entity = value;
					if ((value != null))
					{
						value.HOPDONGs.Add(this);
						this._MaNK = value.MaNK;
					}
					else
					{
						this._MaNK = default(string);
					}
					this.SendPropertyChanged("NIENKHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIVIPHAM")]
	public partial class LOAIVIPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiVP;
		
		private string _TenLoaiVP;
		
		private System.Nullable<int> _MucDo;
		
		private EntitySet<VIPHAM> _VIPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiVPChanging(string value);
    partial void OnMaLoaiVPChanged();
    partial void OnTenLoaiVPChanging(string value);
    partial void OnTenLoaiVPChanged();
    partial void OnMucDoChanging(System.Nullable<int> value);
    partial void OnMucDoChanged();
    #endregion
		
		public LOAIVIPHAM()
		{
			this._VIPHAMs = new EntitySet<VIPHAM>(new Action<VIPHAM>(this.attach_VIPHAMs), new Action<VIPHAM>(this.detach_VIPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiVP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiVP
		{
			get
			{
				return this._MaLoaiVP;
			}
			set
			{
				if ((this._MaLoaiVP != value))
				{
					this.OnMaLoaiVPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiVP = value;
					this.SendPropertyChanged("MaLoaiVP");
					this.OnMaLoaiVPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiVP", DbType="NVarChar(MAX)")]
		public string TenLoaiVP
		{
			get
			{
				return this._TenLoaiVP;
			}
			set
			{
				if ((this._TenLoaiVP != value))
				{
					this.OnTenLoaiVPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiVP = value;
					this.SendPropertyChanged("TenLoaiVP");
					this.OnTenLoaiVPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucDo", DbType="Int")]
		public System.Nullable<int> MucDo
		{
			get
			{
				return this._MucDo;
			}
			set
			{
				if ((this._MucDo != value))
				{
					this.OnMucDoChanging(value);
					this.SendPropertyChanging();
					this._MucDo = value;
					this.SendPropertyChanged("MucDo");
					this.OnMucDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIVIPHAM_VIPHAM", Storage="_VIPHAMs", ThisKey="MaLoaiVP", OtherKey="MaLoaiVP")]
		public EntitySet<VIPHAM> VIPHAMs
		{
			get
			{
				return this._VIPHAMs;
			}
			set
			{
				this._VIPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VIPHAMs(VIPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAIVIPHAM = this;
		}
		
		private void detach_VIPHAMs(VIPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAIVIPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NamSinh;
		
		private string _DiaChi;
		
		private string _MatKhau;
		
		private System.Nullable<int> _SDT;
		
		private string _MaCV;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNamSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNamSinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    partial void OnMaCVChanging(string value);
    partial void OnMaCVChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._CHUCVU = default(EntityRef<CHUCVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="Date")]
		public System.Nullable<System.DateTime> NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="VarChar(10)")]
		public string MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_CHUCVU", ThisKey="MaCV", OtherKey="MaCV", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaCV = value.MaCV;
					}
					else
					{
						this._MaCV = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMQUYEN")]
	public partial class NHOMQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNQ;
		
		private int _MaQuyen;
		
		private EntityRef<QUYEN> _QUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNQChanging(int value);
    partial void OnMaNQChanged();
    partial void OnMaQuyenChanging(int value);
    partial void OnMaQuyenChanged();
    #endregion
		
		public NHOMQUYEN()
		{
			this._QUYEN = default(EntityRef<QUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNQ", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNQ
		{
			get
			{
				return this._MaNQ;
			}
			set
			{
				if ((this._MaNQ != value))
				{
					this.OnMaNQChanging(value);
					this.SendPropertyChanging();
					this._MaNQ = value;
					this.SendPropertyChanged("MaNQ");
					this.OnMaNQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="Int NOT NULL")]
		public int MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					if (this._QUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_NHOMQUYEN", Storage="_QUYEN", ThisKey="MaQuyen", OtherKey="MaQuyen", IsForeignKey=true)]
		public QUYEN QUYEN
		{
			get
			{
				return this._QUYEN.Entity;
			}
			set
			{
				QUYEN previousValue = this._QUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUYEN.Entity = null;
						previousValue.NHOMQUYENs.Remove(this);
					}
					this._QUYEN.Entity = value;
					if ((value != null))
					{
						value.NHOMQUYENs.Add(this);
						this._MaQuyen = value.MaQuyen;
					}
					else
					{
						this._MaQuyen = default(int);
					}
					this.SendPropertyChanged("QUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NIENKHOA")]
	public partial class NIENKHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNK;
		
		private string _NamHoc;
		
		private System.Nullable<System.DateTime> _NgayBD;
		
		private System.Nullable<System.DateTime> _NgayKT;
		
		private System.Nullable<double> _PhiThue;
		
		private EntitySet<HOPDONG> _HOPDONGs;
		
		private EntitySet<SINHVIEN> _SINHVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNKChanging(string value);
    partial void OnMaNKChanged();
    partial void OnNamHocChanging(string value);
    partial void OnNamHocChanged();
    partial void OnNgayBDChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBDChanged();
    partial void OnNgayKTChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKTChanged();
    partial void OnPhiThueChanging(System.Nullable<double> value);
    partial void OnPhiThueChanged();
    #endregion
		
		public NIENKHOA()
		{
			this._HOPDONGs = new EntitySet<HOPDONG>(new Action<HOPDONG>(this.attach_HOPDONGs), new Action<HOPDONG>(this.detach_HOPDONGs));
			this._SINHVIENs = new EntitySet<SINHVIEN>(new Action<SINHVIEN>(this.attach_SINHVIENs), new Action<SINHVIEN>(this.detach_SINHVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNK", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNK
		{
			get
			{
				return this._MaNK;
			}
			set
			{
				if ((this._MaNK != value))
				{
					this.OnMaNKChanging(value);
					this.SendPropertyChanging();
					this._MaNK = value;
					this.SendPropertyChanged("MaNK");
					this.OnMaNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="NVarChar(20)")]
		public string NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBD", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBD
		{
			get
			{
				return this._NgayBD;
			}
			set
			{
				if ((this._NgayBD != value))
				{
					this.OnNgayBDChanging(value);
					this.SendPropertyChanging();
					this._NgayBD = value;
					this.SendPropertyChanged("NgayBD");
					this.OnNgayBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKT", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKT
		{
			get
			{
				return this._NgayKT;
			}
			set
			{
				if ((this._NgayKT != value))
				{
					this.OnNgayKTChanging(value);
					this.SendPropertyChanging();
					this._NgayKT = value;
					this.SendPropertyChanged("NgayKT");
					this.OnNgayKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhiThue", DbType="Float")]
		public System.Nullable<double> PhiThue
		{
			get
			{
				return this._PhiThue;
			}
			set
			{
				if ((this._PhiThue != value))
				{
					this.OnPhiThueChanging(value);
					this.SendPropertyChanging();
					this._PhiThue = value;
					this.SendPropertyChanged("PhiThue");
					this.OnPhiThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NIENKHOA_HOPDONG", Storage="_HOPDONGs", ThisKey="MaNK", OtherKey="MaNK")]
		public EntitySet<HOPDONG> HOPDONGs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NIENKHOA_SINHVIEN", Storage="_SINHVIENs", ThisKey="MaNK", OtherKey="MaNK")]
		public EntitySet<SINHVIEN> SINHVIENs
		{
			get
			{
				return this._SINHVIENs;
			}
			set
			{
				this._SINHVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.NIENKHOA = this;
		}
		
		private void detach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.NIENKHOA = null;
		}
		
		private void attach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NIENKHOA = this;
		}
		
		private void detach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NIENKHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUGUIXE")]
	public partial class PHIEUGUIXE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPGX;
		
		private string _MaSV;
		
		private System.Nullable<double> _TongTien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPGXChanging(string value);
    partial void OnMaPGXChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public PHIEUGUIXE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPGX", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPGX
		{
			get
			{
				return this._MaPGX;
			}
			set
			{
				if ((this._MaPGX != value))
				{
					this.OnMaPGXChanging(value);
					this.SendPropertyChanging();
					this._MaPGX = value;
					this.SendPropertyChanged("MaPGX");
					this.OnMaPGXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(10)")]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoPhong;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<bool> _TinhTrang;
		
		private double _DongHoDien;
		
		private double _DongHoNuoc;
		
		private EntitySet<CTPHONG> _CTPHONGs;
		
		private EntitySet<THIETBIPHONG> _THIETBIPHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoPhongChanging(string value);
    partial void OnSoPhongChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    partial void OnDongHoDienChanging(double value);
    partial void OnDongHoDienChanged();
    partial void OnDongHoNuocChanging(double value);
    partial void OnDongHoNuocChanged();
    #endregion
		
		public PHONG()
		{
			this._CTPHONGs = new EntitySet<CTPHONG>(new Action<CTPHONG>(this.attach_CTPHONGs), new Action<CTPHONG>(this.detach_CTPHONGs));
			this._THIETBIPHONGs = new EntitySet<THIETBIPHONG>(new Action<THIETBIPHONG>(this.attach_THIETBIPHONGs), new Action<THIETBIPHONG>(this.detach_THIETBIPHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhong", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoPhong
		{
			get
			{
				return this._SoPhong;
			}
			set
			{
				if ((this._SoPhong != value))
				{
					this.OnSoPhongChanging(value);
					this.SendPropertyChanging();
					this._SoPhong = value;
					this.SendPropertyChanged("SoPhong");
					this.OnSoPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DongHoDien", DbType="Float NOT NULL")]
		public double DongHoDien
		{
			get
			{
				return this._DongHoDien;
			}
			set
			{
				if ((this._DongHoDien != value))
				{
					this.OnDongHoDienChanging(value);
					this.SendPropertyChanging();
					this._DongHoDien = value;
					this.SendPropertyChanged("DongHoDien");
					this.OnDongHoDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DongHoNuoc", DbType="Float NOT NULL")]
		public double DongHoNuoc
		{
			get
			{
				return this._DongHoNuoc;
			}
			set
			{
				if ((this._DongHoNuoc != value))
				{
					this.OnDongHoNuocChanging(value);
					this.SendPropertyChanging();
					this._DongHoNuoc = value;
					this.SendPropertyChanged("DongHoNuoc");
					this.OnDongHoNuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CTPHONG", Storage="_CTPHONGs", ThisKey="SoPhong", OtherKey="SoPhong")]
		public EntitySet<CTPHONG> CTPHONGs
		{
			get
			{
				return this._CTPHONGs;
			}
			set
			{
				this._CTPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_THIETBIPHONG", Storage="_THIETBIPHONGs", ThisKey="SoPhong", OtherKey="SoPhong")]
		public EntitySet<THIETBIPHONG> THIETBIPHONGs
		{
			get
			{
				return this._THIETBIPHONGs;
			}
			set
			{
				this._THIETBIPHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHONGs(CTPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CTPHONGs(CTPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
		
		private void attach_THIETBIPHONGs(THIETBIPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_THIETBIPHONGs(THIETBIPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUYEN")]
	public partial class QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQuyen;
		
		private string _TenQuyen;
		
		private EntitySet<NHOMQUYEN> _NHOMQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuyenChanging(int value);
    partial void OnMaQuyenChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    #endregion
		
		public QUYEN()
		{
			this._NHOMQUYENs = new EntitySet<NHOMQUYEN>(new Action<NHOMQUYEN>(this.attach_NHOMQUYENs), new Action<NHOMQUYEN>(this.detach_NHOMQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuyen", DbType="NVarChar(50)")]
		public string TenQuyen
		{
			get
			{
				return this._TenQuyen;
			}
			set
			{
				if ((this._TenQuyen != value))
				{
					this.OnTenQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuyen = value;
					this.SendPropertyChanged("TenQuyen");
					this.OnTenQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_NHOMQUYEN", Storage="_NHOMQUYENs", ThisKey="MaQuyen", OtherKey="MaQuyen")]
		public EntitySet<NHOMQUYEN> NHOMQUYENs
		{
			get
			{
				return this._NHOMQUYENs;
			}
			set
			{
				this._NHOMQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHOMQUYENs(NHOMQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = this;
		}
		
		private void detach_NHOMQUYENs(NHOMQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINHVIEN")]
	public partial class SINHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSV;
		
		private string _TenSV;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NamSinh;
		
		private string _DiaChi;
		
		private System.Nullable<int> _SDT;
		
		private string _MaNK;
		
		private EntityRef<NIENKHOA> _NIENKHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnTenSVChanging(string value);
    partial void OnTenSVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNamSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNamSinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    partial void OnMaNKChanging(string value);
    partial void OnMaNKChanged();
    #endregion
		
		public SINHVIEN()
		{
			this._NIENKHOA = default(EntityRef<NIENKHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSV", DbType="NVarChar(50)")]
		public string TenSV
		{
			get
			{
				return this._TenSV;
			}
			set
			{
				if ((this._TenSV != value))
				{
					this.OnTenSVChanging(value);
					this.SendPropertyChanging();
					this._TenSV = value;
					this.SendPropertyChanged("TenSV");
					this.OnTenSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="Date")]
		public System.Nullable<System.DateTime> NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNK", DbType="VarChar(10)")]
		public string MaNK
		{
			get
			{
				return this._MaNK;
			}
			set
			{
				if ((this._MaNK != value))
				{
					if (this._NIENKHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNKChanging(value);
					this.SendPropertyChanging();
					this._MaNK = value;
					this.SendPropertyChanged("MaNK");
					this.OnMaNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NIENKHOA_SINHVIEN", Storage="_NIENKHOA", ThisKey="MaNK", OtherKey="MaNK", IsForeignKey=true)]
		public NIENKHOA NIENKHOA
		{
			get
			{
				return this._NIENKHOA.Entity;
			}
			set
			{
				NIENKHOA previousValue = this._NIENKHOA.Entity;
				if (((previousValue != value) 
							|| (this._NIENKHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NIENKHOA.Entity = null;
						previousValue.SINHVIENs.Remove(this);
					}
					this._NIENKHOA.Entity = value;
					if ((value != null))
					{
						value.SINHVIENs.Add(this);
						this._MaNK = value.MaNK;
					}
					else
					{
						this._MaNK = default(string);
					}
					this.SendPropertyChanged("NIENKHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THIETBI")]
	public partial class THIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTB;
		
		private string _TenTB;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _GiaTB;
		
		private EntitySet<CTBAOTRI> _CTBAOTRIs;
		
		private EntitySet<THIETBIPHONG> _THIETBIPHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTBChanging(string value);
    partial void OnMaTBChanged();
    partial void OnTenTBChanging(string value);
    partial void OnTenTBChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaTBChanging(System.Nullable<double> value);
    partial void OnGiaTBChanged();
    #endregion
		
		public THIETBI()
		{
			this._CTBAOTRIs = new EntitySet<CTBAOTRI>(new Action<CTBAOTRI>(this.attach_CTBAOTRIs), new Action<CTBAOTRI>(this.detach_CTBAOTRIs));
			this._THIETBIPHONGs = new EntitySet<THIETBIPHONG>(new Action<THIETBIPHONG>(this.attach_THIETBIPHONGs), new Action<THIETBIPHONG>(this.detach_THIETBIPHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTB
		{
			get
			{
				return this._MaTB;
			}
			set
			{
				if ((this._MaTB != value))
				{
					this.OnMaTBChanging(value);
					this.SendPropertyChanging();
					this._MaTB = value;
					this.SendPropertyChanged("MaTB");
					this.OnMaTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTB", DbType="NVarChar(50)")]
		public string TenTB
		{
			get
			{
				return this._TenTB;
			}
			set
			{
				if ((this._TenTB != value))
				{
					this.OnTenTBChanging(value);
					this.SendPropertyChanging();
					this._TenTB = value;
					this.SendPropertyChanged("TenTB");
					this.OnTenTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTB", DbType="Float")]
		public System.Nullable<double> GiaTB
		{
			get
			{
				return this._GiaTB;
			}
			set
			{
				if ((this._GiaTB != value))
				{
					this.OnGiaTBChanging(value);
					this.SendPropertyChanging();
					this._GiaTB = value;
					this.SendPropertyChanged("GiaTB");
					this.OnGiaTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTBAOTRI", Storage="_CTBAOTRIs", ThisKey="MaTB", OtherKey="MaTB")]
		public EntitySet<CTBAOTRI> CTBAOTRIs
		{
			get
			{
				return this._CTBAOTRIs;
			}
			set
			{
				this._CTBAOTRIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_THIETBIPHONG", Storage="_THIETBIPHONGs", ThisKey="MaTB", OtherKey="MaTB")]
		public EntitySet<THIETBIPHONG> THIETBIPHONGs
		{
			get
			{
				return this._THIETBIPHONGs;
			}
			set
			{
				this._THIETBIPHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTBAOTRIs(CTBAOTRI entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTBAOTRIs(CTBAOTRI entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_THIETBIPHONGs(THIETBIPHONG entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_THIETBIPHONGs(THIETBIPHONG entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THIETBIPHONG")]
	public partial class THIETBIPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTB;
		
		private string _SoPhong;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<PHONG> _PHONG;
		
		private EntityRef<THIETBI> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTBChanging(string value);
    partial void OnMaTBChanged();
    partial void OnSoPhongChanging(string value);
    partial void OnSoPhongChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public THIETBIPHONG()
		{
			this._PHONG = default(EntityRef<PHONG>);
			this._THIETBI = default(EntityRef<THIETBI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTB
		{
			get
			{
				return this._MaTB;
			}
			set
			{
				if ((this._MaTB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTBChanging(value);
					this.SendPropertyChanging();
					this._MaTB = value;
					this.SendPropertyChanged("MaTB");
					this.OnMaTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhong", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoPhong
		{
			get
			{
				return this._SoPhong;
			}
			set
			{
				if ((this._SoPhong != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoPhongChanging(value);
					this.SendPropertyChanging();
					this._SoPhong = value;
					this.SendPropertyChanged("SoPhong");
					this.OnSoPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_THIETBIPHONG", Storage="_PHONG", ThisKey="SoPhong", OtherKey="SoPhong", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.THIETBIPHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.THIETBIPHONGs.Add(this);
						this._SoPhong = value.SoPhong;
					}
					else
					{
						this._SoPhong = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_THIETBIPHONG", Storage="_THIETBI", ThisKey="MaTB", OtherKey="MaTB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.THIETBIPHONGs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.THIETBIPHONGs.Add(this);
						this._MaTB = value.MaTB;
					}
					else
					{
						this._MaTB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGKE")]
	public partial class THONGKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTK;
		
		private string _MaNV;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<double> _TongTien;
		
		private System.Nullable<double> _TongNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(string value);
    partial void OnMaTKChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnTongNoChanging(System.Nullable<double> value);
    partial void OnTongNoChanged();
    #endregion
		
		public THONGKE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongNo", DbType="Float")]
		public System.Nullable<double> TongNo
		{
			get
			{
				return this._TongNo;
			}
			set
			{
				if ((this._TongNo != value))
				{
					this.OnTongNoChanging(value);
					this.SendPropertyChanging();
					this._TongNo = value;
					this.SendPropertyChanged("TongNo");
					this.OnTongNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
